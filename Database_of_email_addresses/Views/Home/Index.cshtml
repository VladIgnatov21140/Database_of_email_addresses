@using Database_of_email_addresses.Models

@model IndexViewModel
<!--импортируем tag-хелперы проекта-->
@addTagHelper "*, Database_of_email_addresses"
@{
    ViewData["Title"] = "Database_of_email_addresses";
}
<!DOCTYPE html>
<html>
<head>
    <title>Index - Database of email addresses</title>
</head>
<body>
    <h3>Email addresses</h3>
    <form id="AddressesTable">
        <table class="table" border="1">
            <tr>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.IDSort">ID</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.CountrySort">Country</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.CitySort">City</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.StreetSort">Street</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.HouseSort">House</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.PostCodeSort">Post Code</sort-header>
                </td>
                <td>
                    <sort-header action="Index" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                 property="@Model.SortViewModel.DateSort">Date</sort-header>
                </td>
            </tr>
            <tr>
                <td>
                    <input id="Reset" type="reset" value="reset" />
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="CountriesDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            @if (String.IsNullOrWhiteSpace(@Model.FilterViewModel.SelectedCountry) || @Model.FilterViewModel.SelectedCountry == "Все")
                            {
                                Write("Все");
                            }
                            else
                            {
                                Write(@Model.FilterViewModel.SelectedCountry);
                            }
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="CountriesDropdownMenu">
                            @foreach (var country in Model.FilterViewModel.СountriesList)
                            {
                                <li>
                                    <a href="@Url.Action("Index", "Home", new { selectedCountry = @country.Text})">@country.Text</a>
                                </li>
                            }
                        </ul>
                    </div>
                </td>
                <td>
                    @Html.TextBox("selectedCity", @Model.FilterViewModel.SelectedCity, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.FilterViewModel.SelectedCity" })
                </td>
                <td>
                    @Html.TextBox("selectedStreet", @Model.FilterViewModel.SelectedStreet, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.FilterViewModel.SelectedStreet" })
                </td>
                <td>
                    @Html.TextBox("selectedHouse", @Model.FilterViewModel.SelectedHouse, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.FilterViewModel.SelectedHouse" })
                </td>
                <td>
                    @Html.TextBox("selectedPostCode", @Model.FilterViewModel.SelectedPostCode, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.FilterViewModel.SelectedPostCode" })
                </td>
                <td>
                    @Html.TextBox("selectedDate", @Model.FilterViewModel.SelectedDate, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.FilterViewModel.SelectedDate" })
                </td>
            </tr>
            @foreach (var Address in Model.Addresses)
            {
                <tr>
                    <td>@Address.AddrID</td>
                    <td>@Address.Country</td>
                    <td>@Address.City</td>
                    <td>@Address.Street</td>
                    <td>@Address.House</td>
                    <td>@Address.PostCode</td>
                    <td>@Address.Date.Date.ToString("dd.MM.yyyy, hh:mm")</td>
                </tr>
            }
        </table>
        <div class="form-group row">
            @Html.TextBox("pageSize", @Model.PageViewModel.PageSize, htmlAttributes: new { @class = "filtertext form-control", onKeyPress = "", value = "@Model.PageViewModel.PageSize", width="10%" })
                <nav aria-label="PageNavigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            @if (Model.PageViewModel.HasPreviousPage)
                            {
                                <a class="page-link" href="@Url.Action("Index", "Home", new { page = Model.PageViewModel.PageNumber - 1 })" tabindex="-1">Previous</a>
                            }
                            else
                            {
                                <a class="page-link" tabindex="-1">Previous</a>
                            }
                        </li>
                        @for (int i = 1; i <= Model.PageViewModel.TotalPages; i++)
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Action("Index", "Home", new { page = i })">@i.ToString()</a></li>
                        }
                        <li class="page-item">
                            @if (Model.PageViewModel.HasNextPage)
                            {
                                <a class="page-link" href="@Url.Action("Index", "Home", new { page = Model.PageViewModel.PageNumber + 1 })">Next</a>
                            }
                            else
                            {
                                <a class="page-link">Next</a>
                            }
                        </li>
                    </ul>
                </nav>
        </div>
    </form>
</body>
</html>