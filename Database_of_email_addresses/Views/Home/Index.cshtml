@using Database_of_email_addresses.Models
@using Newtonsoft.Json;

@model IndexViewModel
<!--импортируем tag-хелперы проекта-->
@addTagHelper "*, Database_of_email_addresses"
@{
    ViewData["Title"] = "Database_of_email_addresses";
}
    <body id="content">
        <meta http-equiv="Content-Type" content="text/html; Charset=UTF-8">
        <script type="text/javascript">
        function refreshtable() {
            const request = new XMLHttpRequest();
            const url = '@Url.Action("Index", "Home")';
            request.open('GET', url);
            request.setRequestHeader('Content-Type', 'application/x-www-form-url');
            request.addEventListener("readystatechange", () => {
                    if (request.readyState === 4 && request.status === 200) {
                        $("#content").html(request.responseText);
                    }
                });
            request.send();
        }

        function SendFilteringReport() {
            const request = new XMLHttpRequest();
            let data = "[{\"Item1\":\"SelectedCountry\",\"Item2\":\"" + $('#SelectedCountry').val() + "\"}," + "{\"Item1\":\"SelectedArea\",\"Item2\":\"" + $('#SelectedArea').val() + "\"}," + "{\"Item1\":\"SelectedCity\",\"Item2\":\"" + $('#SelectedCity').val() + "\"}," + "{\"Item1\":\"SelectedStreet\",\"Item2\":\"" + $('#SelectedStreet').val() + "\"}," + "{\"Item1\":\"SelectedHousing\",\"Item2\":\"" + $('#SelectedHousing').val() + "\"}," + "{\"Item1\":\"SelectedHouse\",\"Item2\":\"" + $('#SelectedHouse').val() + "\"}," + "{\"Item1\":\"SelectedPostCode\",\"Item2\":\"" + $('#SelectedPostCode').val() + "\"}" + "]";
            const url = '@Url.Action("SetFilters", "Home")' + "?SNewParameters=" + data;
            request.open('GET', url);
            request.setRequestHeader('Content-Type', 'application/x-www-form-url');
            request.addEventListener("readystatechange", () => {
                    if (request.readyState === 4 && request.status === 200) {
                        $("#content").html(request.responseText);
                    }
                });
            request.send();
        }
        </script>
        <form>
            <table class="table table-striped table-bordered" border="1">
                <thead>
                    <tr>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.IDSort">#</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.CountrySort">Страна</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.AreaSort">Область</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.CitySort">Город</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.StreetSort">Улица</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.HousingSort">Корпус</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.HouseSort">Дом</sort-header>
                        </th>
                        <th scope="col">
                            <sort-header action="SetSorting" up="@Model.SortViewModel.Up" current="@Model.SortViewModel.Current"
                                         property="@Model.SortViewModel.PostCodeSort">Индекс</sort-header>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <span id="refreshtable" class="glyphicon glyphicon-refresh" onclick=""></span>
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedCountry" onkeypress="" value="@Model.FilterViewModel.SelectedCountry" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedArea" onkeypress="" value="@Model.FilterViewModel.SelectedArea" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedCity" onkeypress="" value="@Model.FilterViewModel.SelectedCity" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedStreet" onkeypress="" value="@Model.FilterViewModel.SelectedStreet" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedHousing" onkeypress="" value="@Model.FilterViewModel.SelectedHousing" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedHouse" onkeypress="" value="@Model.FilterViewModel.SelectedHouse" />
                        </td>
                        <td>
                            <input type="text" class="filtertext form-control" id="SelectedPostCode" onkeypress="" value="@Model.FilterViewModel.SelectedPostCode" />
                        </td>
                    </tr>
                    @foreach (var Address in Model.Addresses)
                    {
                        <tr>
                            <td>@Address.AddrID</td>
                            <td>@Address.Country</td>
                            <td>@Address.Area</td>
                            <td>@Address.City</td>
                            <td>@Address.Street</td>
                            <td>@Address.Housing</td>
                            <td>@Address.House</td>
                            <td>@Address.PostCode</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="dropdown">
                <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @Model.PageViewModel.PageSize
                </a>

                <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                    <a class="dropdown-item" href='@Url.Action("SetPageSize", "Home", new { PageSize = 5 })'>5</a>
                    <a class="dropdown-item" href='@Url.Action("SetPageSize", "Home", new { PageSize = 10 })'>10</a>
                    <a class="dropdown-item" href='@Url.Action("SetPageSize", "Home", new { PageSize = 20 })'>20</a>
                    <a class="dropdown-item" href='@Url.Action("SetPageSize", "Home", new { PageSize = 50 })'>50</a>
                </div>
            </div>
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.PageViewModel.PageNumber != 1)
                    {
                        <li class="page-item">
                            <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = 1 })' aria-label="Первая">
                                <span aria-hidden="true">Первая</span>
                                <span class="sr-only">Первая</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href='#' tabindex="-1">
                                <span aria-hidden="true">Первая</span>
                                <span class="sr-only">Первая</span>
                            </a>
                        </li>
                    }
                    @if (Model.PageViewModel.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = Model.PageViewModel.PageNumber - 1 })' aria-label="Предыдущая">
                                <span aria-hidden="true">Предыдущая</span>
                                <span class="sr-only">Предыдущая</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">
                                <span aria-hidden="true">Предыдущая</span>
                                <span class="sr-only">Предыдущая</span>
                            </a>
                        </li>
                    }
                    @{
                        int sect = 0;
                        while (Model.PageViewModel.PageNumber > sect)
                        {
                            sect += 5;
                        }
                        if (sect > Model.PageViewModel.TotalPages)
                        {
                            sect -= 5;
                        }
                    }
                    @if (Model.PageViewModel.PageNumber > 0 && Model.PageViewModel.PageNumber < 6)
                    {
                        for (int i = sect - 4; i <= sect; i++)
                        {
                            if (Model.PageViewModel.PageNumber > i)
                            {
                                continue;
                            }
                            if (i != Model.PageViewModel.PageNumber)
                            {
                                <li class="page-item">
                                    <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>@i</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item active">
                                    <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>|@i|<span class="sr-only">(current)</span></a>
                                </li>
                            }
                        }
                    }
                    else
                    {
                        for (int i = sect - 5; i <= sect; i++)
                        {
                            if (i != Model.PageViewModel.PageNumber)
                            {
                                <li class="page-item">
                                    <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>@i</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item active">
                                    <a class="page-link text-primary" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>|@i|<span class="sr-only">(current)</span></a>
                                </li>
                            }
                        }
                    }
                    @for (int i = sect + 1; i <= sect + 5; i++)
                    {
                        if (i > Model.PageViewModel.TotalPages)
                        {
                            break;
                        }

                        if (i != Model.PageViewModel.PageNumber)
                        {
                            <li class="page-item">
                                <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>@i</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item active">
                                <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = i })'>|@i|<span class="sr-only">(current)</span></a>
                            </li>
                        }
                    }
                    @if (Model.PageViewModel.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber=Model.PageViewModel.PageNumber + 1 })' aria-label="Следующая">
                                <span aria-hidden="true">Следующая</span>
                                <span class="sr-only">Следующая</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">
                                <span aria-hidden="true">Следующая</span>
                                <span class="sr-only">Следующая</span>
                            </a>
                        </li>
                    }
                    @if (Model.PageViewModel.PageNumber != Model.PageViewModel.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href='@Url.Action("GetPage", "Home", new { PageNumber = Model.PageViewModel.TotalPages })' aria-label="Последняя">
                                <span aria-hidden="true">Последняя</span>
                                <span class="sr-only">Последняя</span>
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <a class="page-link" href='#' tabindex="-1" >
                                <span aria-hidden="true">Последняя</span>
                                <span class="sr-only">Последняя</span>
                            </a>
                        </li>
                    }
                    </ul>
            </nav>
        </form>
    </body>